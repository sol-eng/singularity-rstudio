Bootstrap: docker
From: rstudio/r-session-complete:centos7-2023.09.1

# needed if you want to set up CRAN and BioConductor repos from RSPM (optional)
# set binaryflag to "" in order to stick to source RPMs
%files
    scripts/run.R /
    #scripts/zz_workbench_singularity_env_vars.sh /etc/profile.d/
    scripts/bioc.txt / 
%post

    # Install Java JDK (optional) 
    yum -y install java-11-openjdk-devel 

    # Set up of developer toolset 11 to use a more recent version of the 
    # compiler toolchain (optional)
    yum -y install centos-release-scl
    yum -y install devtoolset-11

    # clean any pre-existing R installation
    rpm -qa | grep ^R- | xargs rpm -e  
    rm -rf /opt/R /usr/local/bin/R /usr/local/bin/Rscript

    # Install and configure new set of defined R versions
    R_VERSIONS="4.1.3 4.2.3 4.3.1"
    for R_VERSION in ${R_VERSIONS}
    do
    	curl -O https://cdn.rstudio.com/r/centos-7/pkgs/R-${R_VERSION}-1-1.x86_64.rpm
	yum install -y R-${R_VERSION}-1-1.x86_64.rpm
        rm -f R-${R_VERSION}-1-1.x86_64.rpm 
        rm -f /usr/local/bin/R /usr/local/bin/Rscript
        ln -s /opt/R/${R_VERSION}/bin/R /usr/local/bin/R
        ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/local/bin/Rscript

        # Set up developer toolset 11 for R only (optional)
        cat << EOF > /opt/R/${R_VERSION}/lib/R/etc/Renviron.site
# Developer Toolset Root directory
DEVTOOLSROOT=/opt/rh/devtoolset-11/root

# Environment variables needed
PATH=\${DEVTOOLSROOT}/usr/bin:\${PATH}
LD_TMP=\${LD_LIBRARY_PATH}
LD_LIBRARY_PATH=\${DEVTOOLSROOT}/usr/lib64
LD_LIBRARY_PATH=\${DEVTOOLSROOT}/usr/lib:\${LD_LIBRARY_PATH}
LD_LIBRARY_PATH=\${DEVTOOLSROOT}/usr/lib64/dyninst:\${LD_LIBRARY_PATH}
LD_LIBRARY_PATH=\${DEVTOOLSROOT}/usr/lib/dyninst:\${LD_LIBRARY_PATH}
LD_LIBRARY_PATH=\${DEVTOOLSROOT}/usr/lib64:\${LD_LIBRARY_PATH}
LD_LIBRARY_PATH=\${DEVTOOLSROOT}/usr/lib:\${LD_LIBRARY_PATH}:\${LD_TMP}
PKG_CONFIG_PATH=\${DEVTOOLSROOT}/usr/lib64/pkgconfig:\${PKG_CONFIG_PATH}
INFOPATH=\${DEVTOOLSROOT}/usr/share/info:\${INFOPATH}
MANPATH=\${DEVTOOLSROOT}/usr/share/man:\${MANPATH}
X_SCLS=devtoolset-11
PCP_DIR=\${DEVTOOLSROOT}

EOF

        # Update R Makevars to use the new compiler features from  
        # developer toolset 11 (optional)
        R_HOME=/opt/R/${R_VERSION}/lib/R
        if [ -z ${R_HOME} ]; then echo "R_HOME not set"; exit 1; fi
        for std in 14 17 20
        do
          sed -i "s/^CXX${std} .?*/CXX${std} = g++/ ; \
          s/^CXX${std}FLAGS .*/CXX${std}FLAGS = -g -O2 \$(LTO)/ ; \
          s/^CXX${std}PICFLAGS .*/CXX${std}PICFLAGS = -fpic/ ; \
          s/^CXX${std}STD .*/CXX${std}STD = -std=c++${std}/ " \
          $R_HOME/etc/Makeconf
        done

        # Set up R to use latest CRAN and bioconductor repositories 
        # from public RSPM (optional)
        /opt/R/${R_VERSION}/bin/Rscript /run.R

        # Reconfigure R for Java (optional) 
        /opt/R/${R_VERSION}/bin/R CMD javareconf
    done
    rm -f /run.R

    # SLURM integration (mandatory) 
    groupadd -g 401 slurm 
    useradd -u 401 -g 401 slurm  
    yum -y install munge-devel

    # Install SLURM
    # Output of `sinfo -V`
    export SLURM_VERSION=23.02.6

    # Note that the git branches on github do have a slightly different
    # naming scheme - firstly the dots are replaced by dashes and
    # secondly each SLURM version can have more than one release tag
    # Here, we simply append "-1" to use the first git tag of a given
    # SLURM version

    dir=`mktemp -d` && \
        cd $dir && \
        rm -rf slurm && \
        bash -c "git clone --depth 1 -b slurm-\${SLURM_VERSION//./-}-1 https://github.com/SchedMD/slurm.git" && \
        cd slurm && \
        ./configure --prefix /usr/local/slurm > /var/log/slurm-configure.log && \
        echo "Compiling SLURM" && \
        make -j 4 > /var/log/slurm-compile.log && \
        echo "Installing SLURM" && \
        make install > /var/log/slurm-install.log && \
        cd / && \
        rm -rf $dir && \
        ln -s /usr/local/slurm/bin/* /usr/local/bin


    # Install zeromq as prereq for clustermq (optional) 
    yum -y install zeromq

    # Install JAGS 4.3.0 as requirement for rjags
    # Relies on the presence of openblas-devel from the R install
    dir=`mktemp -d`
    cd $dir 
    curl -O -L  https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Source/JAGS-4.3.2.tar.gz/download
    tar xvfz download
    cd JAGS-4.3.2
    ./configure --with-blas="-lopenblas" && make && make install 
    cd 
    rm -rf $dir 

    # install apptainer 
    APPTAINER_VERSION=1.2.5
    dir=`mktemp -d`
    cd $dir 
    curl -L -O https://github.com/apptainer/apptainer/releases/download/v${APPTAINER_VERSION}/apptainer-${APPTAINER_VERSION}-1.x86_64.rpm
    curl -L -O https://github.com/apptainer/apptainer/releases/download/v${APPTAINER_VERSION}/apptainer-suid-${APPTAINER_VERSION}-1.x86_64.rpm
    yum install -y apptainer-${APPTAINER_VERSION}-1.x86_64.rpm 
    yum install -y apptainer-suid-${APPTAINER_VERSION}-1.x86_64.rpm
    rm -f apptainer* 
    cd 
    rm -rf $dir 

    rm -rf /var/cache/yum/*

#%startscript
#    # The below is saving the necessary environment variables so they can eb inherited into
#    # subsequent singularity calls
#    env | grep -e ^SINGULARITY -e ^SLURM | grep -v NAME | grep -v BIND | sed 's/^/export /' > /tmp/.slurm-$USER-$SLURM_JOBID.env
#    $@

%environment
    TINI_SUBREAPER=true
    export SLURM_CONF=/opt/slurm/etc/slurm.conf

