Bootstrap: docker
From: ubuntu:noble 

%files
    ../scripts/run.R /
    ../scripts/bioc.txt /
    ../scripts/r-packages.txt /
    ../scripts/install-pro-driver.sh /
    ../scripts/install-texlive.sh /
    ../scripts/install-quarto.sh /
    ../scripts/install-python.sh /
    ../scripts/install-slurm.sh /
    ../scripts/install-apptainer.sh / 

%post -c /bin/bash
   # Basic tools
    apt-get update && apt-get install -y gdebi-core curl wget

    # Install Pro Drivers
    /install-pro-driver.sh deb {{ PRO_DRIVERS_VERSION }} && rm -f /install-pro-driver.sh

    # Install TeXlive
    apt-get install libpod-simple-perl -y
    /install-texlive.sh && rm -f /install-texlive.sh
    
    # Install Quarto
    /install-quarto.sh {{ QUARTO_VERSION }} && rm -f /install-quarto.sh

    # Install Python 

    /install-python.sh deb ubuntu-2404 {{ PYTHON_VERSION_DEFAULT }} {{ PYTHON_VERSION_LIST }} && rm -rf /install-python.sh 

    # Install PWB session components 
    DEBIAN_FRONTEND=noninteractive apt-get install -y curl libcurl4-gnutls-dev libssl-dev libuser libuser1-dev rrdtool libpq5
    /install-session-components.sh noble {{ PWB_VERSION }} amd64 && rm -f /install-session-components.sh

    #!/bin/bash
    # Install Java JDK (optional) 
    apt-get update -y && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y \
	    default-jdk 

    # Install and configure new set of defined R versions
    for R_VERSION in {{ R_VERSION_LIST }}
    do
        curl -O https://cdn.rstudio.com/r/ubuntu-2404/pkgs/r-${R_VERSION}_1_amd64.deb && \
        DEBIAN_FRONTEND=noninteractive gdebi -n r-${R_VERSION}_1_amd64.deb && \
        rm -f r-${R_VERSION}_1_amd64.deb

        # Reconfigure R for Java (optional) 
        export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
        /opt/R/${R_VERSION}/bin/R CMD javareconf
	echo $JAVA_HOME/lib/server > /etc/ld.so.conf.d/java.conf

        # Need to make sure R is in PATH so that pak can run R as a subprocess

        PATH=/opt/R/${R_VERSION}/bin:$PATH /opt/R/${R_VERSION}/bin/Rscript /run.R
    done
    rm -f /run.R

    # Defining system default version
    if [ ! -z {{ R_VERSION_DEFAULT }} ]; then
        ln -s /opt/R/{{ R_VERSION_DEFAULT }}/bin/R /usr/local/bin
        ln -s /opt/R/{{ R_VERSION_DEFAULT }}/bin/Rscript /usr/local/bin
    fi

    # Install SLURM
    apt-get install -y libmunge-dev
    /install-slurm.sh {{ SLURM_VERSION }} && rm -f /install-slurm.sh
    
    #Install Apptainer
    /install-apptainer.sh deb {{ APPTAINER_VERSION }} && rm -f /install-apptainer.sh

%environment  
    TINI_SUBREAPER=true
    export SLURM_CONF=/opt/slurm/etc/slurm.conf
