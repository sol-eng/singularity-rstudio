Bootstrap: docker
From: rstudio/r-session-complete:jammy-2023.09.1 

# needed if you want to set up CRAN and BioConductor repos from RSPM (optional)
# set binaryflag to "" in order to stick to source RPMs
%files
    scripts/run.R /
#    scripts/zz_workbench_singularity_env_vars.sh /etc/profile.d/     
    scripts/bioc.txt /

%post
    #!/bin/bash
    # Install Java JDK (optional) 
    apt-get update -y && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y \
	    default-jdk 

    # Install gdebi-core
    apt-get -y install gdebi-core

    # clean any pre-existing R installation
    dpkg -l | grep "  r-" | awk '{print $2}' | xargs apt remove  -y
    rm -rf /opt/R /usr/local/bin/R /usr/local/bin/Rscript

    # Install and configure new set of defined R versions
    R_VERSIONS="4.1.3 4.2.3 4.3.1"
    for R_VERSION in ${R_VERSIONS}
    do
        curl -O https://cdn.rstudio.com/r/ubuntu-2204/pkgs/r-${R_VERSION}_1_amd64.deb && \
        gdebi -n r-${R_VERSION}_1_amd64.deb && \
        rm -f r-${R_VERSION}_1_amd64.deb
        rm -f /usr/local/bin/R /usr/local/bin/Rscript
        ln -s /opt/R/${R_VERSION}/bin/R /usr/local/bin/R
        ln -s /opt/R/${R_VERSION}/bin/Rscript /usr/local/bin/Rscript

    	# Reconfigure R for Java (optional) 
    	/opt/R/${R_VERSION}/bin/R CMD javareconf 

    	# Set up R to use latest CRAN and bioconductor repositories 
        # from public RSPM (optional)
    	/opt/R/${R_VERSION}/bin/Rscript /run.R 
    done	
    
    # Needed if using CRAN and BioConductor repos from RSPM (optional)
    rm -f /run.R 

    # Install zeromq as prereq for clustermq (optional) 
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        libzmq5 

    # Install JAGS as prereq for rjags (optional)
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        jags

    # Install SLURM
    groupadd -g 401 slurm
    useradd -u 401 -g 401 slurm
    apt-get install -y libmunge-dev

    # Output of `sinfo -V`
    export SLURM_VERSION=23.02.6

    # Note that the git branches on github do have a slightly different
    # naming scheme - firstly the dots are replaced by dashes and
    # secondly each SLURM version can have more than one release tag
    # Here, we simply append "-1" to use the first git tag of a given
    # SLURM version

    dir=`mktemp -d` && \
        cd $dir && \
        rm -rf slurm && \
        bash -c "git clone --depth 1 -b slurm-\${SLURM_VERSION//./-}-1 https://github.com/SchedMD/slurm.git" && \
        cd slurm && \
        ./configure --prefix /usr/local/slurm > /var/log/slurm-configure.log && \
        echo "Compiling SLURM" && \
        make -j 4 > /var/log/slurm-compile.log && \
        echo "Installing SLURM" && \
        make install > /var/log/slurm-install.log && \
        cd / && \
        rm -rf $dir && \
        ln -s /usr/local/slurm/bin/* /usr/local/bin

    #Install Apptainer
    dir=`mktemp -d`
    cd $dir  
    APPTAINER_VERSION=1.2.5
    curl -L -O https://github.com/apptainer/apptainer/releases/download/v${APPTAINER_VERSION}/apptainer_${APPTAINER_VERSION}_amd64.deb
    curl -L -O https://github.com/apptainer/apptainer/releases/download/v${APPTAINER_VERSION}/apptainer-suid_${APPTAINER_VERSION}_amd64.deb
    gdebi -n apptainer_${APPTAINER_VERSION}_amd64.deb 
    gdebi -n apptainer-suid_${APPTAINER_VERSION}_amd64.deb
    rm -f apptainer*
    cd 
    rm -rf $dir 

    rm -rf /var/cache/yum/*


#%startscript
#    # The below is saving the necessary environment variables so they can eb inherited into
#    # subsequent singularity calls
#    env | grep -e ^SINGULARITY -e ^SLURM | grep -v NAME | grep -v BIND | sed 's/^/export /' > /tmp/.slurm-$USER-$SLURM_JOBID.env
#    $@

%environment  
    TINI_SUBREAPER=true
    export SLURM_CONF=/opt/slurm/etc/slurm.conf
