Bootstrap: docker
From: redhat/ubi8:latest 

%files
    ../scripts/run.R /
    ../scripts/bioc.txt /
    ../scripts/r-packages.txt /
    ../scripts/install-pro-driver.sh /
    ../scripts/install-texlive.sh /
    ../scripts/install-quarto.sh /
    ../scripts/install-python.sh /
    ../scripts/install-slurm.sh /
    ../scripts/install-apptainer.sh / 
    ../scripts/rhn.sh /

%post -c /bin/bash
    # basic tools 
    bash /rhn.sh && rm /rhn.sh
    yum -y install yum-utils https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && yum-config-manager --enable codeready-builder-for-rhel-8-x86_64-rpms

    # Install Pro Drivers
    /install-pro-driver.sh rpm {{ PRO_DRIVERS_VERSION }} && rm -f /install-pro-driver.sh

    # Install TeXlive
    apt-get install perl -y
    /install-texlive.sh && rm -f /install-texlive.sh
    
    # Install Quarto
    /install-quarto.sh {{ QUARTO_VERSION }} && rm -f /install-quarto.sh

    # Install Python 

    /install-python.sh rpm centos-8 {{ PYTHON_VERSION_DEFAULT }} {{ PYTHON_VERSION_LIST }} && rm -rf /install-python.sh 

    # Install PWB session components 
    yum install -y libcurl-devel openssl-devel rrdtool postgresql-libs
    /install-session-components.sh rhel8 {{ PWB_VERSION }}

    # Install Java JDK (optional) 
    yum -y install java-1.8.0-openjdk-devel

    # Install GCC developer toolset
    yum -y install gcc-toolset-14

    # Install and configure new set of defined R versions
    for R_VERSION in {{ R_VERSION_LIST }}
    do
    	yum install -y https://cdn.rstudio.com/r/centos-8/pkgs/R-${R_VERSION}-1-1.x86_64.rpm

        # Set up gcc toolset 14 for R only (optional)
        cat << EOF > /opt/R/${R_VERSION}/lib/R/etc/Renviron.site
# GCC Toolset Root directory
DEVTOOLSROOT=/opt/rh/gcc-toolset-14/root

# Environment variables needed
PCP_DIR=\${DEVTOOLSROOT}
X_SCLS=gcc-toolset-14 
SHLVL=4
DEBUGINFOD_URLS=https://debuginfod.centos.org/ 

MANPATH=\${DEVTOOLSROOT}/usr/share/man:\${MANPATH}
PATH=/opt/rh/gcc-toolset-14/root/usr/bin:\${PATH}
LD_LIBRARY_PATH=/opt/rh/gcc-toolset-14/root/usr/lib64:/opt/rh/gcc-toolset-14/root/usr/lib:\${LD_LIBRARY_PATH}
PKG_CONFIG_PATH=/opt/rh/gcc-toolset-14/root/usr/lib64/pkgconfig:\${PKG_CONFIG_PATH}
INFOPATH=/opt/rh/gcc-toolset-14/root/usr/share/info:\${INFOPATH}
EOF

        # Update R Makevars to use the new compiler features from  
        # gcc toolset 14 (optional)
        R_HOME=/opt/R/${R_VERSION}/lib/R
        if [ -z ${R_HOME} ]; then echo "R_HOME not set"; exit 1; fi
        for std in 20 23
        do
          sed -i "s/^CXX${std} .?*/CXX${std} = g++/ ; \
          s/^CXX${std}FLAGS .*/CXX${std}FLAGS = -g -O2 \$(LTO)/ ; \
          s/^CXX${std}PICFLAGS .*/CXX${std}PICFLAGS = -fpic/ ; \
          s/^CXX${std}STD .*/CXX${std}STD = -std=c++${std}/ " \
          $R_HOME/etc/Makeconf
        done

        # Reconfigure R for Java (optional) 
        export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk
        /opt/R/${R_VERSION}/bin/R CMD javareconf
	echo $JAVA_HOME/lib/server > /etc/ld.so.conf.d/java.conf

        # Need to make sure R is in PATH so that pak can run R as a subprocess
        rm -f /usr/local/bin/{R,Rscript}
        ln -s /opt/R/${R_VERSION}/bin/{R,Rscript} /usr/local/bin
        /opt/R/${R_VERSION}/bin/Rscript /run.R
        rm -f /usr/local/bin/{R,Rscript}
    done
    rm -f /run.R

    # Defining system default version
    if [ ! -z {{ R_VERSION_DEFAULT }} ]; then
        ln -s /opt/R/{{ R_VERSION_DEFAULT }}/bin/R /usr/local/bin
        ln -s /opt/R/{{ R_VERSION_DEFAULT }}/bin/Rscript /usr/local/bin
    fi

    # Install SLURM
    apt-get install -y libmunge-dev
    /install-slurm.sh {{ SLURM_VERSION }} && rm -f /install-slurm.sh
    
    #Install Apptainer
    /install-apptainer.sh rpm {{ APPTAINER_VERSION }} && rm -f /install-apptainer.sh

%environment  
    TINI_SUBREAPER=true
    export SLURM_CONF=/opt/slurm/etc/slurm.conf
