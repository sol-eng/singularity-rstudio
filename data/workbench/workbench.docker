FROM rstudio/rstudio-workbench:2021.09.1-372.pro1 

COPY scripts/create.R /

RUN groupadd -g 401 slurm && \ 
       useradd -u 401 -g 401 slurm && \ 
       apt-get update && apt-get install -y munge libmunge-dev && rm -rf /var/cache/apt/*

RUN apt-get update -y && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y \
	    default-jdk && \
	rm -rf /var/lib/apt/lists/*

RUN for R_VERSION in `ls /opt/R`; \
        do \ 
    	/opt/R/${R_VERSION}/bin/R CMD javareconf && \ 
    	/opt/R/${R_VERSION}/bin/Rscript /create.R  > /opt/R/${R_VERSION}/lib/R/etc/Rprofile.site && \
    	echo "#renv settings\nRENV_PATHS_PREFIX_AUTO = TRUE\nRENV_PATHS_CACHE=/shared/renv" >> /opt/R/${R_VERSION}/lib/R/etc/Renviron.site && \
    	/opt/R/${R_VERSION}/bin/R -q -e "install.packages('renv',lib='/opt/R/${R_VERSION}/lib/R/library/')" && \ 
	/opt/R/${R_VERSION}/bin/R -q -e "install.packages('rJava',lib='/opt/R/${R_VERSION}/lib/R/library/')" ; \
    done	
    
    # Needed if using CRAN and BioConductor repos from RSPM (optional)
RUN rm -f /create.R 

# Dependency for clustermq
RUN apt-get update -y && \
    	DEBIAN_FRONTEND=noninteractive apt-get install -y \
        libzmq5 && \
        rm -rf /var/lib/apt/lists/*

# Configure munge
COPY munge/munge.key /etc/munge

RUN chmod +s /usr/sbin/munged && \
	chown munge /usr/sbin/munged && \
	chmod u+s /usr/sbin/munged && \
	mkdir -p /var/run/munge && \
	chown munge /var/run/munge/ && \
   	chown munge /etc/munge/munge.key && \
	echo "[program:munge]\ncommand=/usr/sbin/munged -F\nautorestart=false\nnumprocs=1\nstdout_logfile=/dev/stdout\nstdout_logfile_maxbytes=0\nstderr_logfile=/dev/stderr\nstderr_logfile_maxbytes=0" > /startup/custom/munge.conf && \ 
	cat /startup/custom/munge.conf

# Removing empty sssd conf as this seems to crash docker-compose
RUN rm -f /startup/user-provisioning/sssd.conf 

# Install SLURM
ARG SLURM_VERSION=20.02.4

RUN mkdir /tmp/build && \
	cd /tmp/build && \
        wget http://134.100.28.207/files/src/slurm/slurm-${SLURM_VERSION}.tar.bz2 && \
	tar xvfj slurm-${SLURM_VERSION}.tar.bz2 && \
	cd slurm-${SLURM_VERSION} && \
	./configure --prefix /opt/slurm && \
	make -j 4  && make install && \
	cd / && \
	rm -rf /tmp/build
